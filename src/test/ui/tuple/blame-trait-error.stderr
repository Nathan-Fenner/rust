error[E0277]: the trait bound `Q: T3` is not satisfied
  --> $DIR/blame-trait-error.rs:49:60
   |
LL |     want(Wrapper { value: Burrito { spicy: false, filling: q } });
   |     ---- required by a bound introduced by this call       ^ the trait `T3` is not implemented for `Q`
   |
note: required for `Burrito<Q>` to implement `T2`
  --> $DIR/blame-trait-error.rs:18:13
   |
LL | impl<A: T3> T2 for Burrito<A> {}
   |             ^^     ^^^^^^^^^^
note: required for `Wrapper<Burrito<Q>>` to implement `T1`
  --> $DIR/blame-trait-error.rs:12:13
   |
LL | impl<B: T2> T1 for Wrapper<B> {}
   |             ^^     ^^^^^^^^^^
note: required by a bound in `want`
  --> $DIR/blame-trait-error.rs:46:12
   |
LL | fn want<V: T1>(_x: V) {}
   |            ^^ required by this bound in `want`
help: consider restricting type parameter `Q`
   |
LL | fn example<Q: T3>(q: Q) {
   |             ++++

error[E0277]: the trait bound `Q: T3` is not satisfied
  --> $DIR/blame-trait-error.rs:52:84
   |
LL |     want(Wrapper { value: BurritoKinds::SmallBurrito { spicy: true, small_filling: q } });
   |     ---- required by a bound introduced by this call                               ^ the trait `T3` is not implemented for `Q`
   |
note: required for `BurritoKinds<Q>` to implement `T2`
  --> $DIR/blame-trait-error.rs:28:13
   |
LL | impl<D: T3> T2 for BurritoKinds<D> {}
   |             ^^     ^^^^^^^^^^^^^^^
note: required for `Wrapper<BurritoKinds<Q>>` to implement `T1`
  --> $DIR/blame-trait-error.rs:12:13
   |
LL | impl<B: T2> T1 for Wrapper<B> {}
   |             ^^     ^^^^^^^^^^
note: required by a bound in `want`
  --> $DIR/blame-trait-error.rs:46:12
   |
LL | fn want<V: T1>(_x: V) {}
   |            ^^ required by this bound in `want`
help: consider restricting type parameter `Q`
   |
LL | fn example<Q: T3>(q: Q) {
   |             ++++

error[E0277]: the trait bound `Q: T3` is not satisfied
  --> $DIR/blame-trait-error.rs:55:39
   |
LL |     want(Wrapper { value: Taco(false, q) });
   |     ----                              ^ the trait `T3` is not implemented for `Q`
   |     |
   |     required by a bound introduced by this call
   |
note: required for `Taco<Q>` to implement `T2`
  --> $DIR/blame-trait-error.rs:31:13
   |
LL | impl<E: T3> T2 for Taco<E> {}
   |             ^^     ^^^^^^^
note: required for `Wrapper<Taco<Q>>` to implement `T1`
  --> $DIR/blame-trait-error.rs:12:13
   |
LL | impl<B: T2> T1 for Wrapper<B> {}
   |             ^^     ^^^^^^^^^^
note: required by a bound in `want`
  --> $DIR/blame-trait-error.rs:46:12
   |
LL | fn want<V: T1>(_x: V) {}
   |            ^^ required by this bound in `want`
help: consider restricting type parameter `Q`
   |
LL | fn example<Q: T3>(q: Q) {
   |             ++++

error[E0277]: the trait bound `Q: T3` is not satisfied
  --> $DIR/blame-trait-error.rs:58:53
   |
LL |     want(Wrapper { value: TacoKinds::OneTaco(false, q) });
   |     ----                                            ^ the trait `T3` is not implemented for `Q`
   |     |
   |     required by a bound introduced by this call
   |
note: required for `TacoKinds<Q>` to implement `T2`
  --> $DIR/blame-trait-error.rs:37:13
   |
LL | impl<F: T3> T2 for TacoKinds<F> {}
   |             ^^     ^^^^^^^^^^^^
note: required for `Wrapper<TacoKinds<Q>>` to implement `T1`
  --> $DIR/blame-trait-error.rs:12:13
   |
LL | impl<B: T2> T1 for Wrapper<B> {}
   |             ^^     ^^^^^^^^^^
note: required by a bound in `want`
  --> $DIR/blame-trait-error.rs:46:12
   |
LL | fn want<V: T1>(_x: V) {}
   |            ^^ required by this bound in `want`
help: consider restricting type parameter `Q`
   |
LL | fn example<Q: T3>(q: Q) {
   |             ++++

error[E0277]: the trait bound `Q: T3` is not satisfied
  --> $DIR/blame-trait-error.rs:61:74
   |
LL |     want(Wrapper { value: GenericBurrito { spiciness: NotSpicy, filling: q } });
   |     ---- required by a bound introduced by this call                     ^ the trait `T3` is not implemented for `Q`
   |
note: required for `GenericBurrito<NotSpicy, Q>` to implement `T2`
  --> $DIR/blame-trait-error.rs:43:16
   |
LL | impl<X, Y: T3> T2 for GenericBurrito<X, Y> {}
   |                ^^     ^^^^^^^^^^^^^^^^^^^^
note: required for `Wrapper<GenericBurrito<NotSpicy, Q>>` to implement `T1`
  --> $DIR/blame-trait-error.rs:12:13
   |
LL | impl<B: T2> T1 for Wrapper<B> {}
   |             ^^     ^^^^^^^^^^
note: required by a bound in `want`
  --> $DIR/blame-trait-error.rs:46:12
   |
LL | fn want<V: T1>(_x: V) {}
   |            ^^ required by this bound in `want`
help: consider restricting type parameter `Q`
   |
LL | fn example<Q: T3>(q: Q) {
   |             ++++

error: aborting due to 5 previous errors

For more information about this error, try `rustc --explain E0277`.
